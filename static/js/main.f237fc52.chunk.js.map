{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORTING","App","useState","sortType","setSortType","isReversed","setIsReversed","goods","sort","good1","good2","localeCompare","length","reverse","className","type","onClick","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EACQ,WADRA,EAEM,SAFNA,EAGO,GAGAC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAQ,UAAIR,GAAiBS,MAAK,SAACC,EAAOC,GAC9C,OAAQP,GACN,KAAKH,EACH,OAAOS,EAAME,cAAcD,GAE7B,KAAKV,EACH,OAAOS,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAQb,OAJIP,GACFE,EAAMM,UAIN,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMZ,EAAYJ,IAC3Bc,UAAWG,IAAW,SAAU,UAAW,CACzC,WAAYd,IAAaH,IAJ7B,iCAUA,wBACEe,KAAK,SACLC,QAAS,kBAAMZ,EAAYJ,IAC3Bc,UAAWG,IAAW,SAAU,aAAc,CAC5C,WAAYd,IAAaH,IAJ7B,4BAUA,wBACEe,KAAK,SACLC,QAAS,kBAAMV,GAAeD,IAC9BS,UAAWG,IAAW,SAAU,aAAc,CAC5C,YAAaZ,IAJjB,sBAUEF,IAAaH,GAAqBK,IAClC,wBACEU,KAAK,SACLC,QAAS,WACPZ,EAAYJ,GACZM,GAAc,IAEhBQ,UAAU,4BANZ,sBAcJ,6BACGP,EAAMW,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,aC1F/CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f237fc52.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORTING = {\n  byAlphabet: 'alphabet',\n  byLength: 'length',\n  byDefault: '',\n};\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const goods = [...goodsFromServer].sort((good1, good2) => {\n    switch (sortType) {\n      case SORTING.byAlphabet:\n        return good1.localeCompare(good2);\n\n      case SORTING.byLength:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SORTING.byAlphabet)}\n          className={classNames('button', 'is-info', {\n            'is-light': sortType !== SORTING.byAlphabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SORTING.byLength)}\n          className={classNames('button', 'is-success', {\n            'is-light': sortType !== SORTING.byLength,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsReversed(!isReversed)}\n          className={classNames('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SORTING.byDefault || isReversed) && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setSortType(SORTING.byDefault);\n              setIsReversed(false);\n            }}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )\n        }\n      </div>\n\n      <ul>\n        {goods.map(good => <li data-cy=\"Good\">{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}